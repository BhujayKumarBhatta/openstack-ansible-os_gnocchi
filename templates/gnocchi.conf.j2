# {{ ansible_managed }}
[DEFAULT]
debug = {{ debug }}
verbose = {{ verbose }}
log_file = /var/log/gnocchi/gnocchi.log
watch_log_file = True
fatal_deprecations = {{ gnocchi_fatal_deprecations }}

[api]
host = {{ gnocchi_service_address }}
port = {{ gnocchi_service_port }}

[indexer]
url = mysql+pymysql://{{ gnocchi_galera_user }}:{{ gnocchi_galera_password }}@{{ gnocchi_galera_address }}/{{ gnocchi_galera_database }}?charset=utf8

[keystone_authtoken]
insecure = {{ keystone_service_internaluri_insecure | bool }}
auth_plugin = {{ gnocchi_keystone_auth_plugin }}
signing_dir = /var/cache/gnocchi
auth_url = {{ keystone_service_adminuri }}
auth_uri = {{ keystone_service_internaluri }}
region_name = {{ gnocchi_service_region }}
project_domain_id = {{ gnocchi_service_project_domain_id }}
user_domain_id = {{ gnocchi_service_user_domain_id }}
project_name = {{ gnocchi_service_project_name }}
username = {{ gnocchi_service_user_name }}
password = {{ gnocchi_service_password }}

memcached_servers = {{ memcached_servers }}
token_cache_time = 300
revocation_cache_time = 60

# if your memcached server is shared, use these settings to avoid cache poisoning
memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcached_encryption_key }}

# if your keystone deployment uses PKI, and you value security over performance:
check_revocations_for_cached = False

[storage]
driver = file
coordination_url = file:///var/lib/gnocchi/locks

[metricd]
# Number of workers for Gnocchi metric daemons. By default the available number
# of CPU is used. (integer value)
# Minimum value: 1
#workers = <None>

[statsd]
# The listen IP for statsd (string value)
#host = 0.0.0.0

# The port for statsd (port value)
# Minimum value: 1
# Maximum value: 65535
#port = 8125

# Resource UUID to use to identify statsd in Gnocchi (string value)
#resource_id = <None>

# User UUID to use to identify statsd in Gnocchi (string value)
#user_id = <None>

# Project UUID to use to identify statsd in Gnocchi (string value)
#project_id = <None>

# Archive policy name to use when creating metrics (string value)
#archive_policy_name = <None>

# Delay between flushes (floating point value)
#flush_delay = <None>

############
## File Storage
############
# Path used to store gnocchi data files. (string value)
file_basepath = /var/lib/gnocchi

# Path used to store Gnocchi temporary files. (string value)
file_basepath_tmp = ${file_basepath}/tmp

############
## Ceph Storage
############
# Ceph pool name to use. (string value)
#ceph_pool = gnocchi

# Ceph username (ie: client.admin). (string value)
#ceph_username = <None>

# Ceph keyring path. (string value)
#ceph_keyring = <None>

# Ceph configuration file. (string value)
#ceph_conffile = /etc/ceph/ceph.conf

############
## Swift Storage
############
# Swift authentication version to user. (string value)
#swift_auth_version = 1

# Swift pre-auth URL. (string value)
#swift_preauthurl = <None>

# Swift auth URL. (string value)
#swift_authurl = http://localhost:8080/auth/v1.0

# Swift token to user to authenticate. (string value)
#swift_preauthtoken = <None>

# Swift user. (string value)
#swift_user = admin:admin

# Swift key/password. (string value)
#swift_key = admin

# Swift tenant name, only used in v2 auth. (string value)
#swift_tenant_name = <None>

# Prefix to namespace metric containers. (string value)
#swift_container_prefix = gnocchi

# Connection timeout in seconds. (integer value)
#swift_timeout = 300

############
## InfluxDB Storage
############
# InfluxDB host (string value)
#influxdb_host = localhost

# InfluxDB port (port value)
# Minimum value: 1
# Maximum value: 65535
#influxdb_port = 8086

# InfluxDB username (string value)
#influxdb_username = root

# InfluxDB password (string value)
#influxdb_password = <None>

# InfluxDB database (string value)
#influxdb_database = gnocchi

# InfluxDB ingests data in asynchroneous ways. Set to True to wait data are
# ingested. (boolean value)
#influxdb_block_until_data_ingested = false
